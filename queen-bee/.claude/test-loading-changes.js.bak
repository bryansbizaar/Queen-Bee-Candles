#!/usr/bin/env node

/**
 * Quick validation script for loading text removal changes
 */

const fs = require('fs');
const path = require('path');

console.log('üîç Validating loading text removal changes...\n');

// Check LoadingSpinner.jsx
const spinnerPath = path.join(__dirname, 'client/src/components/LoadingSpinner.jsx');
const spinnerContent = fs.readFileSync(spinnerPath, 'utf8');

console.log('‚úÖ LoadingSpinner.jsx changes:');
console.log('- Removed "Loading products..." text');
console.log('- Added data-testid="loading-spinner"');
console.log('- Kept visual spinner animation\n');

// Check ProductDetail.test.jsx
const testPath = path.join(__dirname, 'client/src/components/ProductDetail.test.jsx');
const testContent = fs.readFileSync(testPath, 'utf8');

console.log('‚úÖ ProductDetail.test.jsx changes:');
console.log('- Updated test to check for data-testid instead of text');
console.log('- Changed from getByText(/Loading/) to getByTestId(\'loading-spinner\')\n');

// Check index.css
const cssPath = path.join(__dirname, 'client/src/index.css');
const cssContent = fs.readFileSync(cssPath, 'utf8');

console.log('‚úÖ index.css changes:');
console.log('- Removed unused .loading-spinner-text style');
console.log('- Kept .loading-spinner animation styles\n');

// Validation checks
let allChecksPass = true;

// Verify no loading text in spinner
if (spinnerContent.includes('Loading products')) {
  console.log('‚ùå ERROR: LoadingSpinner still contains loading text');
  allChecksPass = false;
} else {
  console.log('‚úÖ LoadingSpinner text removed successfully');
}

// Verify test-id is present
if (spinnerContent.includes('data-testid="loading-spinner"')) {
  console.log('‚úÖ LoadingSpinner has correct test-id');
} else {
  console.log('‚ùå ERROR: LoadingSpinner missing test-id');
  allChecksPass = false;
}

// Verify test is updated
if (testContent.includes('getByTestId(\'loading-spinner\')')) {
  console.log('‚úÖ Test updated to use test-id');
} else {
  console.log('‚ùå ERROR: Test not updated correctly');
  allChecksPass = false;
}

// Verify no old text checks remain
if (testContent.includes('getByText(/Loading/)') || testContent.includes('getByText(\'Loading...\')')  || testContent.includes('getByText("Loading...")')) {
  console.log('‚ùå ERROR: Test still contains old text checks');
  allChecksPass = false;
} else {
  console.log('‚úÖ Old text checks removed from test');
}

// Verify CSS cleanup
if (cssContent.includes('.loading-spinner-text')) {
  console.log('‚ùå ERROR: Unused CSS class still present');
  allChecksPass = false;
} else {
  console.log('‚úÖ Unused CSS class removed');
}

console.log('\n' + '='.repeat(50));
if (allChecksPass) {
  console.log('üéâ ALL CHECKS PASSED! Loading text cleanup is complete.');
  console.log('\nChanges summary:');
  console.log('- ‚úÖ Removed redundant "Loading products..." text');
  console.log('- ‚úÖ Kept visual loading spinner animation');
  console.log('- ‚úÖ Updated tests to check for spinner presence');
  console.log('- ‚úÖ Cleaned up unused CSS');
  console.log('\nYour changes should now pass CI/CD pipeline tests! üöÄ');
} else {
  console.log('‚ùå SOME CHECKS FAILED. Please review the errors above.');
  process.exit(1);
}
